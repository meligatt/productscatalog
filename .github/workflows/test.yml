name: Test all the things
on: push
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        service: [server, client, browser_test, browser_test_admin]
    env:
      BRANCH_NAME: ${{ github.ref_name }}
      SERVICE_NAME: ${{ matrix.service }}
      ARTIFACT_PATH: /tmp/${{ matrix.service }}-${{ github.ref_name }}.tar
    steps:
      # Need to replace '-' in branch name with '_' per Docker's rules for image names
      - name: Set IMAGE_TAG env var
        run: |
          IMAGE_TAG=$(echo $BRANCH_NAME | sed -e "s/-/_/g")
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and export
        uses: docker/build-push-action@v3
        with:
          context: ./${{ env.SERVICE_NAME }}
          tags: ${{ env.SERVICE_NAME }}:${{ env.IMAGE_TAG }}
          outputs: type=docker,dest=${{ env.ARTIFACT_PATH }}
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.SERVICE_NAME }}-${{ github.ref_name }}
          path: ${{ env.ARTIFACT_PATH }}
  lint:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      fail-fast: true
      matrix:
        service: [server]
    env:
      BRANCH_NAME: ${{ github.ref_name }}
      SERVICE_NAME: ${{ matrix.service }}
      ARTIFACT_PATH: /tmp/${{ matrix.service }}-${{ github.ref_name }}.tar
    steps:
      # Need to replace '-' in branch name with '_' per Docker's rules for image names
      - name: Set IMAGE_TAG env var
        run: |
          IMAGE_TAG=$(echo $BRANCH_NAME | sed -e "s/-/_/g")
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.SERVICE_NAME }}-${{ env.BRANCH_NAME }}
          path: /tmp
      - name: Load image
        run: docker load --input ${ARTIFACT_PATH}
      - name: Lint Typescript files
        run: docker run ${SERVICE_NAME}:${{ env.IMAGE_TAG }} yarn run lint

  test:
    runs-on: ubuntu-latest
    needs: build
    env:
      DB_NAME: ${{ secrets.DB_NAME }}
      BRANCH_NAME: ${{ github.ref_name }}
      ARTIFACT_PATH: /tmp/${{ matrix.service }}-${{ github.ref_name }}.tar
    steps:
      # Need to replace '-' in branch name with '_' per Docker's rules for image names
      - name: Set Docker image env vars
        run: |
          IMAGE_TAG=$(echo $BRANCH_NAME | sed -e "s/-/_/g")
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

          echo "SERVER_IMAGE=server:$IMAGE_TAG" >> $GITHUB_ENV
          echo "SERVER_ARTIFACT_PATH=/tmp/server-$BRANCH_NAME.tar" >> $GITHUB_ENV
          echo "CLIENT_IMAGE=client:$IMAGE_TAG" >> $GITHUB_ENV
          echo "CLIENT_ARTIFACT_PATH=/tmp/client-$BRANCH_NAME.tar" >> $GITHUB_ENV
          echo "BROWSER_TEST_IMAGE=browser_test:$IMAGE_TAG" >> $GITHUB_ENV
          echo "BROWSER_TEST_ARTIFACT_PATH=/tmp/browser_test-$BRANCH_NAME.tar" >> $GITHUB_ENV
          echo "BROWSER_TEST_ADMIN_IMAGE=browser_test_admin:$IMAGE_TAG" >> $GITHUB_ENV
          echo "BROWSER_TEST_ADMIN_ARTIFACT_PATH=/tmp/browser_test_admin-$BRANCH_NAME.tar" >> $GITHUB_ENV
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Download server artifact
        uses: actions/download-artifact@v3
        with:
          name: server-${{ env.BRANCH_NAME }}
          path: /tmp
      - name: Load server image
        run: docker load --input ${SERVER_ARTIFACT_PATH}

      - name: Download client artifact
        uses: actions/download-artifact@v3
        with:
          name: client-${{ env.BRANCH_NAME }}
          path: /tmp
      - name: Load client image
        run: docker load --input ${CLIENT_ARTIFACT_PATH}

      - name: Download browser_test artifact
        uses: actions/download-artifact@v3
        with:
          name: browser_test-${{ env.BRANCH_NAME }}
          path: /tmp
      - name: Load browser_test image
        run: docker load --input ${BROWSER_TEST_ARTIFACT_PATH}

      - name: Download browser_test_admin artifact
        uses: actions/download-artifact@v3
        with:
          name: browser_test_admin-${{ env.BRANCH_NAME }}
          path: /tmp
      - name: Load browser_test_admin image
        run: docker load --input ${BROWSER_TEST_ADMIN_ARTIFACT_PATH}

      - name: Run server unit tests
        run: docker-compose -f docker-compose.ci.yml run server yarn run test:unit
      - name: Run client unit tests
        run: docker-compose -f docker-compose.ci.yml run client yarn run test --watchAll=false
      - name: Run server integration tests
        run: ./scripts/integration_tests.sh docker-compose.ci.yml
      - name: Reset containers between test scripts
        run: docker-compose -f docker-compose.ci.yml down
      - name: Run browser end to end tests for client app
        run: ./scripts/browser_tests.sh docker-compose.ci.yml browser_test localhost:3000
      - name: Run browser end to end tests for admin app
        run: ./scripts/browser_tests.sh docker-compose.ci.yml browser_test_admin localhost:3333
      - uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: cypress-screenshots
          path: ./browser_test/cypress/screenshots/
